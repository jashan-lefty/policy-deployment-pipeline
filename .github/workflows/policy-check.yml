name: OPA Policy Evaluation

on:
  push:
    paths:
      - "inputs/gcp/google_kms/google_kms_key_ring/**"
      - "policies/gcp/google_kms/google_kms_key_ring/**"
      - ".github/workflows/opa-policy-check.yml"
  workflow_dispatch:

jobs:
  kms-key-ring-policy-check:
    runs-on: ubuntu-latest

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    steps:
      - name: ‚úÖ Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Get full history for better debugging

      - name: üîç Debug: Show workspace structure
        run: |
          echo "=== Workspace Structure ==="
          ls -R
          echo "=== Policy Files ==="
          find policies -type f -name "*.rego" -exec ls -la {} \;
          echo "=== Input Files ==="
          find inputs -type f -name "*.json" -exec ls -la {} \;

      - name: ‚öñÔ∏è Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: üî¢ Set up OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/
          opa version

      - name: üíº Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: üó∫Ô∏è Terraform Init & Plan & Show JSON
        id: tf_plan
        run: |
          cd inputs/gcp/google_kms/google_kms_key_ring/location

          echo "‚ñ∂ Initializing Terraform..."
          terraform init -input=false

          echo "‚ñ∂ Planning..."
          terraform plan -out=plan -no-color
          
          echo "=== Plan File Size ==="
          ls -lh plan
          
          echo "‚ñ∂ Converting plan to JSON..."
          terraform show -json plan > plan.json
          
          echo "=== Plan.json Content Sample ==="
          jq '.resource_changes[] | {type: .type, name: .name, change: .change.actions}' plan.json
          echo "=== Total Resources ==="
          jq '.resource_changes | length' plan.json
          
          echo "=== Saving plan.json as artifact ==="
          mkdir -p /tmp/opa-debug
          cp plan.json /tmp/opa-debug/
          
        continue-on-error: true  # Continue even if plan fails

      - name: üì¶ Upload Plan for Debugging
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: terraform-plan
          path: /tmp/opa-debug/plan.json

      - name: üîç Debug: Validate Rego Policy Syntax
        run: |
          echo "=== Policy Syntax Check ==="
          opa check "${GITHUB_WORKSPACE}/policies/gcp"
          
          echo "=== Policy Test Results ==="
          opa test "${GITHUB_WORKSPACE}/policies/gcp" -v

      - name: üîç Run OPA with Full Debugging
        id: opa_check
        shell: bash
        run: |
          echo "=== Running OPA Evaluation ==="
          
          # First run with full output
          echo "‚ñ∂ Full OPA Evaluation Output:"
          opa eval \
            --data "${GITHUB_WORKSPACE}/policies/gcp" \
            --input "${GITHUB_WORKSPACE}/inputs/gcp/google_kms/google_kms_key_ring/location/plan.json" \
            --format pretty \
            "data.terraform.gcp.security.google_kms.google_kms_key_ring.location"
            
          # Then capture just the summary
          echo "‚ñ∂ Summary Output:"
          result=$(opa eval \
            --data "${GITHUB_WORKSPACE}/policies/gcp" \
            --input "${GITHUB_WORKSPACE}/inputs/gcp/google_kms/google_kms_key_ring/location/plan.json" \
            --format pretty \
            "data.terraform.gcp.security.google_kms.google_kms_key_ring.location.summary.message")

          echo "$result"
          
          # Save result for subsequent steps
          echo "result=${result}" >> $GITHUB_OUTPUT

          # Look for "Non-compliant ... : 0/" ‚Üí success; otherwise fail
          if echo "$result" | grep -qE "Non-compliant .*: 0/"; then
            echo "‚úÖ All resources compliant."
          else
            echo "::error:: üö® Found non-compliant resources!"
            # print just the violation lines for clarity
            echo "$result" | tail -n +3
            exit 1
          fi

      - name: üîç Debug: Show OPA Evaluation Trace
        if: failure()
        run: |
          echo "=== OPA Evaluation Trace ==="
          opa eval \
            --data "${GITHUB_WORKSPACE}/policies/gcp" \
            --input "${GITHUB_WORKSPACE}/inputs/gcp/google_kms/google_kms_key_ring/location/plan.json" \
            --format pretty \
            --explain notes \
            "data.terraform.gcp.security.google_kms.google_kms_key_ring.location"
