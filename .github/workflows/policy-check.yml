name: OPA Policy Evaluation

on:
  push:
    paths:
      - "inputs/gcp/google_kms/google_kms_key_ring/**"
      - "policies/gcp/google_kms/google_kms_key_ring/**"
      - ".github/workflows/opa-policy-check.yml"
  workflow_dispatch:

jobs:
  kms-key-ring-policy-check:
    runs-on: ubuntu-latest

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    steps:
      - name: ‚úÖ Checkout Repository
        uses: actions/checkout@v3

      - name: ‚öñÔ∏è Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: üî¢ Set up OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/

      - name: üíº Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: üó∫Ô∏è Terraform Init & Plan & Show JSON
        id: tf_plan
        run: |
          cd inputs/gcp/google_kms/google_kms_key_ring/location

          echo "‚ñ∂ Initializing Terraform..."
          terraform init -input=false

          echo "‚ñ∂ Planning..."
          terraform plan -out=plan

          echo "‚ñ∂ Converting plan to JSON..."
          terraform show -json plan > plan.json

      - name: üîç Run OPA policy check and enforce compliance
        shell: bash
        run: |
          # sift out the summary message
          result=$(opa eval \
            --data "${GITHUB_WORKSPACE}/policies/gcp" \
            --input inputs/gcp/google_kms/google_kms_key_ring/location/plan.json \
            --format pretty \
            "data.terraform.gcp.security.google_kms.google_kms_key_ring.location.summary.message")

          echo "$result"

          # Look for "Non-compliant ... : 0/" ‚Üí success; otherwise fail
          if echo "$result" | grep -qE "Non-compliant .*: 0/"; then
            echo "‚úÖ All resources compliant."
          else
            echo "::error:: üö® Found non-compliant resources!"
            # print just the violation lines for clarity
            echo "$result" | tail -n +3
            exit 1
          fi
