name: OPA Policy Evaluation

on:
  push:
    paths:
      - "inputs/gcp/google_kms/google_kms_key_ring/**"
      - "policies/gcp/google_kms/google_kms_key_ring/**"
      - ".github/workflows/opa-policy-check.yml"
  workflow_dispatch:

jobs:
  kms-key-ring-policy-check:
    runs-on: ubuntu-latest

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    steps:
      - name:  Checkout Repository
        uses: actions/checkout@v3

      - name:  Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name:  Set up OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/

      - name:  Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: " Terraform Init & Plan & Show JSON"
        id: tf_plan
        run: |
          cd inputs/gcp/google_kms/google_kms_key_ring/location

          echo "▶ Initializing Terraform..."
          terraform init -input=false

          echo "▶ Planning..."
          terraform plan -out=plan.binary

          echo "▶ Converting plan to JSON..."
          terraform show -json plan.binary | grep -v "::debug::" | tail -n +2 > plan.json 

      - name: Run OPA policy check and enforce compliance
        shell: bash
        run: |
          result=$(opa eval \
            --data "${GITHUB_WORKSPACE}/policies/gcp" \
            --input "${GITHUB_WORKSPACE}/inputs/gcp/google_kms/google_kms_key_ring/location/plan.json" \
            --format pretty \
            "data.terraform.gcp.security.google_kms.google_kms_key_ring.location.message")
      
          echo "$result"
      
          # Detect if 'All passed' appears in any Non-Compliant line
          if echo "$result" | grep -q "Non-Compliant Resources: All passed"; then
            echo "All resources compliant."
          else
            echo "::error:: Found non-compliant resources!"
            echo "$result" | tail -n +3
            exit 1
          fi
