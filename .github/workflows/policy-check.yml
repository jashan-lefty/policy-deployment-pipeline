name: OPA Policy Evaluation

on:
  push:
    paths:
      - "inputs/gcp/google_kms/google_kms_key_ring/**"
      - "policies/gcp/google_kms/google_kms_key_ring/**"
      - ".github/workflows/opa-policy-check.yml"
  workflow_dispatch:

jobs:
  kms-key-ring-policy-check:
    runs-on: ubuntu-latest

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    steps:
      - name: ✅ Checkout Repository
        uses: actions/checkout@v3

      - name: "📁 Debug: Show workspace files"
        run: |
          echo "📂 Files in workspace:"
          find . -type f

      - name: ⚖️ Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: 🔢 Set up OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/
          echo "✅ OPA version:"
          opa version

      - name: 💼 Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: 🗺️ Terraform Init & Plan & Show JSON
        id: tf_plan
        run: |
          cd inputs/gcp/google_kms/google_kms_key_ring/location

          echo "▶ Initializing Terraform..."
          terraform init -input=false

          echo "▶ Planning..."
          terraform plan -out=plan

          echo "📄 Plan file contents (text preview):"
          terraform show plan | head -n 50

          echo "▶ Converting plan to JSON..."
          terraform show -json plan > plan.json

          echo "📄 JSON structure (resource_changes preview):"
          jq '.resource_changes | map({type: .type, name: .name, actions: .change.actions})' plan.json

          echo "📦 Plan.json saved at: $(pwd)/plan.json"

      - name: 🧪 Debug: Check Rego syntax
        run: |
          echo "🔍 Checking Rego policies syntax:"
          opa check policies/gcp || echo "::warning:: Rego syntax check failed."

      - name: 🔍 Run OPA policy check and enforce compliance
        shell: bash
        run: |
          echo "▶ Running OPA Evaluation:"
          result=$(opa eval \
            --data "${GITHUB_WORKSPACE}/policies/gcp" \
            --input "${GITHUB_WORKSPACE}/inputs/gcp/google_kms/google_kms_key_ring/location/plan.json" \
            --format pretty \
            "data.terraform.gcp.security.google_kms.google_kms_key_ring.location.summary.message")

          echo "$result"

          echo "▶ Checking compliance summary..."
          if echo "$result" | grep -qE "Non-compliant .*: 0/"; then
            echo "✅ All resources compliant."
          else
            echo "::error:: 🚨 Found non-compliant resources!"
            echo "$result" | tail -n +3
            exit 1
          fi

      - name: 🧵 Debug: Run OPA with trace (on failure)
        if: failure()
        run: |
          echo "📋 Full OPA trace:"
          opa eval \
            --data "${GITHUB_WORKSPACE}/policies/gcp" \
            --input "${GITHUB_WORKSPACE}/inputs/gcp/google_kms/google_kms_key_ring/location/plan.json" \
            --format pretty \
            --explain notes \
            "data.terraform.gcp.security.google_kms.google_kms_key_ring.location"
